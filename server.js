// ====================================================================
// === Shubhzone - рдореБрдЦреНрдп рд╕рд░реНрд╡рд░ (The Smart Cache) - v9.0 (Optimized) ===
// === рдХрд╛рдо: Firebase рдбреЗрдЯрд╛ рдХреЛ рдореЗрдореЛрд░реА рдореЗрдВ рд░рдЦрдХрд░ рдХреЛрдЯрд╛ рдмрдЪрд╛рдирд╛ ===
// ====================================================================

const express = require('express');
const cors = require('cors');
const admin = require('firebase-admin');
const fetch = require('node-fetch');
const path = require('path');
const request = require('request');

const app = express();
const PORT = process.env.PORT || 10000;
app.use(cors());
app.use(express.static(path.join(__dirname, '')));

let db;
// тШЕтШЕтШЕ рдирдпрд╛ рд╕реНрдорд╛рд░реНрдЯ рддрд░реАрдХрд╛: рдбреЗрдЯрд╛ рдХреЛ рд╕рд░реНрд╡рд░ рдХреА рдореЗрдореЛрд░реА рдореЗрдВ рд░рдЦреЗрдВ тШЕтШЕтШЕ
let movieCache = [];
let seriesCache = [];
let cacheTimestamp = null;

try {
    const serviceAccount = JSON.parse(process.env.FIREBASE_CREDENTIALS);
    admin.initializeApp({ credential: admin.credential.cert(serviceAccount) });
    db = admin.firestore();
    console.log('Firebase рдбреЗрдЯрд╛рдмреЗрд╕ рд╕реЗ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдХрдиреЗрдХреНрдЯ рд╣реЛ рдЧрдпрд╛ рд╣реИред');
    // рд╕рд░реНрд╡рд░ рд╢реБрд░реВ рд╣реЛрддреЗ рд╣реА рдкрд╣рд▓реА рдмрд╛рд░ рдбреЗрдЯрд╛ рд▓реЛрдб рдХрд░реЗрдВ
    loadDataIntoCache();
} catch (error) {
    console.error('Firebase Admin SDK рд╢реБрд░реВ рдХрд░рдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐:', error.message);
}

// тШЕтШЕтШЕ рдирдпрд╛ рдлрдВрдХреНрд╢рди: Firebase рд╕реЗ рд╕рд╛рд░рд╛ рдбреЗрдЯрд╛ рдПрдХ рдмрд╛рд░ рдореЗрдВ рд▓реЛрдб рдХрд░рдХреЗ рдореЗрдореЛрд░реА рдореЗрдВ рд░рдЦрдиреЗ рдХреЗ рд▓рд┐рдП тШЕтШЕтШЕ
async function loadDataIntoCache() {
    if (!db) return;
    try {
        console.log('рдХреИрд╢ рдХреЛ рд░рд┐рдлреНрд░реЗрд╢ рдХрд┐рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ...');
        const movieSnapshot = await db.collection('Available_Movies').get();
        movieCache = movieSnapshot.docs.map(doc => doc.data());
        
        const seriesSnapshot = await db.collection('Available_WebSeries').get();
        seriesCache = seriesSnapshot.docs.map(doc => doc.data());

        cacheTimestamp = new Date();
        console.log(`рдХреИрд╢ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЕрдкрдбреЗрдЯ рд╣реБрдЖ: ${movieCache.length} рдлрд┐рд▓реНрдореЗрдВ, ${seriesCache.length} рд╡реЗрдм-рд╕реАрд░реАрдЬрд╝ред`);
    } catch (error) {
        console.error("рдХреИрд╢ рдореЗрдВ рдбреЗрдЯрд╛ рд▓реЛрдб рдХрд░рдиреЗ рдореЗрдВ рд╡рд┐рдлрд▓:", error);
    }
}

// рд╣рд░ 15 рдорд┐рдирдЯ рдореЗрдВ рдХреИрд╢ рдХреЛ рдЕрдкрдиреЗ рдЖрдк рд░рд┐рдлреНрд░реЗрд╢ рдХрд░реЗрдВ
setInterval(loadDataIntoCache, 15 * 60 * 1000); 

// ====================================================================
// === API Endpoints (рдЕрдм рдореЗрдореЛрд░реА рд╕реЗ рдбреЗрдЯрд╛ рджреЗрдВрдЧреЗ) ===
// ====================================================================

app.get('/api/stream', (req, res) => { /* Unchanged */ });

app.get('/api/media-by-genre', async (req, res) => {
    try {
        const { genreId, mediaType } = req.query;
        if (!genreId || !mediaType) return res.status(400).json({ error: 'Genre ID рдФрд░ Media Type рджреЛрдиреЛрдВ реЫрд░реВрд░реА рд╣реИрдВ.' });

        // тШЕтШЕтШЕ рдмрджрд▓рд╛ рд╣реБрдЖ рд▓реЙрдЬрд┐рдХ: Firebase рдХреА рдЬрдЧрд╣ рдореЗрдореЛрд░реА рд╕реЗ рдбреЗрдЯрд╛ рд▓реЗрдВ тШЕтШЕтШЕ
        const sourceCache = mediaType === 'movie' ? movieCache : seriesCache;
        
        if (sourceCache.length === 0) {
            console.warn("рдХреИрд╢ рдЦрд╛рд▓реА рд╣реИ, рджреЛрдмрд╛рд░рд╛ рд▓реЛрдб рдХрд░рдиреЗ рдХреА рдХреЛрд╢рд┐рд╢ рдХреА рдЬрд╛ рд░рд╣реА рд╣реИ...");
            await loadDataIntoCache(); // рдЕрдЧрд░ рдХреИрд╢ рдЦрд╛рд▓реА рд╣реИ рддреЛ рдПрдХ рдмрд╛рд░ рдФрд░ рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдВ
        }

        let filteredMedia = [];
        if (genreId === 'latest') {
            filteredMedia = [...sourceCache].sort((a, b) => new Date(b.lastChecked) - new Date(a.lastChecked));
        } else {
            const numericGenreId = parseInt(genreId);
            filteredMedia = sourceCache.filter(media => 
                media.genres && Array.isArray(media.genres) && media.genres.includes(numericGenreId)
            );
        }
        
        const finalResults = filteredMedia.slice(0, 20);
        res.status(200).json({ results: finalResults });

    } catch (error) {
        console.error(`рдХреИрдЯреЗрдЧрд░реА рдХреЗ рд╣рд┐рд╕рд╛рдм рд╕реЗ рдореАрдбрд┐рдпрд╛ рд▓рд╛рдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐:`, error);
        res.status(500).json({ error: 'рд╕рд░реНрд╡рд░ рд╕реЗ рдореАрдбрд┐рдпрд╛ рд▓рд╛рдиреЗ рдореЗрдВ рд╡рд┐рдлрд▓.' });
    }
});

app.get('/api/tv-details', async (req, res) => { /* Unchanged */ });
app.get('/api/youtube', async (req, res) => { /* Unchanged */ });

// ====================================================================
// === рдлрд╛рдЗрдирд▓ рд╕реЗрдЯрдЕрдк ===
// ====================================================================
app.get('*', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

app.listen(PORT, () => {
    console.log('/////////////////////////////////////////////////////');
    console.log(`===> ЁЯЪА Shubhzone рд╕реНрдорд╛рд░реНрдЯ-рдХреИрд╢ рд╕рд░реНрд╡рд░ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЪрд▓ рд░рд╣рд╛ рд╣реИ! ЁЯЪА`);
    console.log(`===> рдкреЛрд░реНрдЯ ${PORT} рдкрд░ рд╕реБрдирд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ.`);
    console.log('/////////////////////////////////////////////////////');
});
