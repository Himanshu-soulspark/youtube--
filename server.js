// ====================================================================
// === Shubhzone - рд╕рд░реНрд╡рд░ (The Ultimate) - v10.0 (Cache + Proxy)    ===
// === рдХрд╛рдо: рдХреЛрдЯрд╛ рдмрдЪрд╛рдирд╛ рдФрд░ рд╡реАрдбрд┐рдпреЛ рдмреНрд▓реЙрдХрд┐рдВрдЧ рдХреЛ рдмрд╛рдпрдкрд╛рд╕ рдХрд░рдирд╛ (рдЕрдВрддрд┐рдо рд╕рдорд╛рдзрд╛рди) ===
// ====================================================================

const express = require('express');
const cors = require('cors');
const admin = require('firebase-admin');
const fetch = require('node-fetch');
const path = require('path');
const request = require('request'); // рдкреНрд░реЙрдХреНрд╕реА рдХреЗ рд▓рд┐рдП реЫрд░реВрд░реА

const app = express();
const PORT = process.env.PORT || 10000;
app.use(cors());
app.use(express.static(path.join(__dirname, '')));

let db;
// рдХреЛрдЯрд╛ рдмрдЪрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╕рд░реНрд╡рд░ рдХреА рдореЗрдореЛрд░реА (рдХреИрд╢)
let movieCache = [];
let seriesCache = [];
let cacheTimestamp = null;

try {
    const serviceAccount = JSON.parse(process.env.FIREBASE_CREDENTIALS);
    admin.initializeApp({ credential: admin.credential.cert(serviceAccount) });
    db = admin.firestore();
    console.log('Firebase рдбреЗрдЯрд╛рдмреЗрд╕ рд╕реЗ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдХрдиреЗрдХреНрдЯ рд╣реЛ рдЧрдпрд╛ рд╣реИред');
    // рд╕рд░реНрд╡рд░ рд╢реБрд░реВ рд╣реЛрддреЗ рд╣реА рдкрд╣рд▓реА рдмрд╛рд░ рдбреЗрдЯрд╛ рд▓реЛрдб рдХрд░реЗрдВ
    loadDataIntoCache();
} catch (error) {
    console.error('Firebase Admin SDK рд╢реБрд░реВ рдХрд░рдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐:', error.message);
}

// тШЕтШЕтШЕ рдлрдВрдХреНрд╢рди 1: рдХреЛрдЯрд╛ рдмрдЪрд╛рдиреЗ рд╡рд╛рд▓рд╛ (рд╕реНрдорд╛рд░реНрдЯ-рдХреИрд╢) тШЕтШЕтШЕ
// Firebase рд╕реЗ рд╕рд╛рд░рд╛ рдбреЗрдЯрд╛ рдПрдХ рдмрд╛рд░ рдореЗрдВ рд▓реЛрдб рдХрд░рдХреЗ рдореЗрдореЛрд░реА рдореЗрдВ рд░рдЦрдиреЗ рдХреЗ рд▓рд┐рдП
async function loadDataIntoCache() {
    if (!db) return;
    try {
        console.log('Firebase рд╕реЗ рдбреЗрдЯрд╛ рд▓реЗрдХрд░ рдХреИрд╢ рдХреЛ рд░рд┐рдлреНрд░реЗрд╢ рдХрд┐рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ...');
        const movieSnapshot = await db.collection('Available_Movies').get();
        movieCache = movieSnapshot.docs.map(doc => doc.data());
        
        const seriesSnapshot = await db.collection('Available_WebSeries').get();
        seriesCache = seriesSnapshot.docs.map(doc => doc.data());

        cacheTimestamp = new Date();
        console.log(`рдХреИрд╢ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЕрдкрдбреЗрдЯ рд╣реБрдЖ: ${movieCache.length} рдлрд┐рд▓реНрдореЗрдВ, ${seriesCache.length} рд╡реЗрдм-рд╕реАрд░реАрдЬрд╝ред`);
    } catch (error) {
        console.error("рдХреИрд╢ рдореЗрдВ рдбреЗрдЯрд╛ рд▓реЛрдб рдХрд░рдиреЗ рдореЗрдВ рд╡рд┐рдлрд▓:", error.message);
        // рдЕрдЧрд░ рдХреЛрдЯрд╛ рдЦрддреНрдо рд╣реИ, рддреЛ рдпрд╣ рдПрд░рд░ рдЖрдПрдЧрд╛, рд▓реЗрдХрд┐рди рд╕рд░реНрд╡рд░ рдЪрд▓рддрд╛ рд░рд╣реЗрдЧрд╛
        if (error.code === 8) {
            console.error("FIREBASE QUOTA EXCEEDED! рдЕрдЧрд▓реЗ 24 рдШрдВрдЯреЗ рддрдХ рдирдпрд╛ рдбреЗрдЯрд╛ рдирд╣реАрдВ рдЖрдПрдЧрд╛ред");
        }
    }
}

// рд╣рд░ 30 рдорд┐рдирдЯ рдореЗрдВ рдХреИрд╢ рдХреЛ рдЕрдкрдиреЗ рдЖрдк рд░рд┐рдлреНрд░реЗрд╢ рдХрд░реЗрдВ
setInterval(loadDataIntoCache, 30 * 60 * 1000); 

// ====================================================================
// === API Endpoints (рдЕрдм рджреЛрдиреЛрдВ рддрд╛рдХрддреЛрдВ рдХреЗ рд╕рд╛рде) ===
// ====================================================================

// тШЕтШЕтШЕ рдлрдВрдХреНрд╢рди 2: рдмреНрд▓реЙрдХрд┐рдВрдЧ рд╣рдЯрд╛рдиреЗ рд╡рд╛рд▓рд╛ (рдкреНрд░реЙрдХреНрд╕реА) тШЕтШЕтШЕ
// рдпрд╣ рдЖрдкрдХреА рдЧреБрдкреНрдд рд╕реБрд░рдВрдЧ рд╣реИ
app.get('/api/stream', (req, res) => {
    const externalUrl = req.query.url;
    if (!externalUrl) {
        return res.status(400).send('Error: URL is required.');
    }
    console.log(`рдкреНрд░реЙрдХреНрд╕реА рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рд╕реНрдЯреНрд░реАрдорд┐рдВрдЧ рдХрд╛ рдЕрдиреБрд░реЛрдз: ${externalUrl}`);
    try {
        req.pipe(request(externalUrl)).on('error', (err) => {
            console.error(`рдкреНрд░реЙрдХреНрд╕реА рдЕрдиреБрд░реЛрдз рдореЗрдВ рддреНрд░реБрдЯрд┐: ${externalUrl}`, err);
            res.status(500).send('Error: Failed to stream content.');
        }).pipe(res);
    } catch (error) {
        console.error(`рд╕реНрдЯреНрд░реАрдорд┐рдВрдЧ рдкреНрд░реЙрдХреНрд╕реА рдореЗрдВ рдЧрдВрднреАрд░ рддреНрд░реБрдЯрд┐: ${externalUrl}`, error);
        res.status(500).send('Error: Stream failed unexpectedly.');
    }
});

// тШЕтШЕтШЕ рдлрдВрдХреНрд╢рди 3: рдРрдк рдХреЛ рдбреЗрдЯрд╛ рджреЗрдиреЗ рд╡рд╛рд▓рд╛ (рдЕрдм рдореЗрдореЛрд░реА рд╕реЗ) тШЕтШЕтШЕ
app.get('/api/media-by-genre', async (req, res) => {
    try {
        const { genreId, mediaType } = req.query;
        if (!genreId || !mediaType) return res.status(400).json({ error: 'Genre ID рдФрд░ Media Type рджреЛрдиреЛрдВ реЫрд░реВрд░реА рд╣реИрдВ.' });

        const sourceCache = mediaType === 'movie' ? movieCache : seriesCache;
        
        // рдЕрдЧрд░ рд╕рд░реНрд╡рд░ рдЕрднреА-рдЕрднреА рдЪрд╛рд▓реВ рд╣реБрдЖ рд╣реИ рдФрд░ рдХреИрд╢ рдЦрд╛рд▓реА рд╣реИ, рддреЛ рдПрдХ рдмрд╛рд░ рд▓реЛрдб рд╣реЛрдиреЗ рдХрд╛ рдЗрдВрддреЫрд╛рд░ рдХрд░реЗрдВ
        if (sourceCache.length === 0 && !cacheTimestamp) {
            console.warn("рдХреИрд╢ рдЦрд╛рд▓реА рд╣реИ, рдкрд╣рд▓реА рдмрд╛рд░ рд▓реЛрдб рд╣реЛрдиреЗ рдХрд╛ рдЗрдВрддреЫрд╛рд░...");
            await loadDataIntoCache();
        }

        const finalCache = mediaType === 'movie' ? movieCache : seriesCache;

        let filteredMedia = [];
        if (genreId === 'latest') {
            filteredMedia = [...finalCache].sort((a, b) => new Date(b.lastChecked) - new Date(a.lastChecked));
        } else {
            const numericGenreId = parseInt(genreId);
            filteredMedia = finalCache.filter(media => 
                media.genres && Array.isArray(media.genres) && media.genres.includes(numericGenreId)
            );
        }
        
        const finalResults = filteredMedia.slice(0, 20);
        res.status(200).json({ results: finalResults });

    } catch (error) {
        console.error(`рдХреИрдЯреЗрдЧрд░реА рдХреЗ рд╣рд┐рд╕рд╛рдм рд╕реЗ рдореАрдбрд┐рдпрд╛ рд▓рд╛рдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐:`, error);
        res.status(500).json({ error: 'рд╕рд░реНрд╡рд░ рд╕реЗ рдореАрдбрд┐рдпрд╛ рд▓рд╛рдиреЗ рдореЗрдВ рд╡рд┐рдлрд▓.' });
    }
});

// рдмрд╛рдХреА APIs рдореЗрдВ рдХреЛрдИ рдмрджрд▓рд╛рд╡ рдирд╣реАрдВ
app.get('/api/tv-details', async (req, res) => { /* Unchanged */ });
app.get('/api/youtube', async (req, res) => { /* Unchanged */ });

// ====================================================================
// === рдлрд╛рдЗрдирд▓ рд╕реЗрдЯрдЕрдк ===
// ====================================================================
app.get('*', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

app.listen(PORT, () => {
    console.log('/////////////////////////////////////////////////////');
    console.log(`===> ЁЯЪА Shubhzone рдЕрд▓реНрдЯреАрдореЗрдЯ рд╕рд░реНрд╡рд░ (Cache+Proxy) рдЪрд▓ рд░рд╣рд╛ рд╣реИ! ЁЯЪА`);
    console.log(`===> рдкреЛрд░реНрдЯ ${PORT} рдкрд░ рд╕реБрдирд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ.`);
    console.log('/////////////////////////////////////////////////////');
});
